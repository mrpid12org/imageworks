/home/stewa/code/imageworks/.venv/lib/python3.12/site-packages/torch/cuda/__init__.py:63: FutureWarning: The pynvml package is deprecated. Please install nvidia-ml-py instead. If you did not install pynvml directly, please report this to the maintainers of the package that installed pynvml for you.
  import pynvml  # type: ignore[import]
/home/stewa/code/imageworks/.venv/lib/python3.12/site-packages/transformers/utils/hub.py:111: FutureWarning: Using `TRANSFORMERS_CACHE` is deprecated and will be removed in v5 of Transformers. Use `HF_HOME` instead.
  warnings.warn(
INFO 09-30 20:09:17 [__init__.py:216] Automatically detected platform cuda.
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:09:18 [api_server.py:1896] vLLM API server version 0.10.2
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:09:18 [utils.py:328] non-default args: {'model_tag': 'ybelkada/llava-1.5-7b-hf-awq', 'host': '0.0.0.0', 'port': 24001, 'chat_template': 'llava15_vicuna.jinja', 'model': 'ybelkada/llava-1.5-7b-hf-awq', 'dtype': 'float16', 'max_model_len': 4096, 'quantization': 'awq'}
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:09:25 [__init__.py:742] Resolved architecture: LlavaForConditionalGeneration
[1;36m(APIServer pid=968226)[0;0m `torch_dtype` is deprecated! Use `dtype` instead!
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:09:25 [__init__.py:1815] Using max model len 4096
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:09:25 [_ipex_ops.py:16] Import error msg: No module named 'intel_extension_for_pytorch'
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:09:25 [awq_marlin.py:121] Detected that the model can run with awq_marlin, however you specified quantization=awq explicitly, so forcing awq. Use quantization=awq_marlin for faster inference
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:09:25 [__init__.py:1217] awq quantization is not fully optimized yet. The speed can be slower than non-quantized models.
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:09:25 [scheduler.py:222] Chunked prefill is enabled with max_num_batched_tokens=2048.
[1;36m(APIServer pid=968226)[0;0m /home/stewa/code/imageworks/.venv/lib/python3.12/site-packages/mistral_common/protocol/instruct/messages.py:74: FutureWarning: ImageChunk has moved to 'mistral_common.protocol.instruct.chunk'. It will be removed from 'mistral_common.protocol.instruct.messages' in 1.10.0.
[1;36m(APIServer pid=968226)[0;0m   warnings.warn(msg, FutureWarning)
/home/stewa/code/imageworks/.venv/lib/python3.12/site-packages/torch/cuda/__init__.py:63: FutureWarning: The pynvml package is deprecated. Please install nvidia-ml-py instead. If you did not install pynvml directly, please report this to the maintainers of the package that installed pynvml for you.
  import pynvml  # type: ignore[import]
/home/stewa/code/imageworks/.venv/lib/python3.12/site-packages/transformers/utils/hub.py:111: FutureWarning: Using `TRANSFORMERS_CACHE` is deprecated and will be removed in v5 of Transformers. Use `HF_HOME` instead.
  warnings.warn(
INFO 09-30 20:09:29 [__init__.py:216] Automatically detected platform cuda.
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:31 [core.py:654] Waiting for init message from front-end.
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:31 [core.py:76] Initializing a V1 LLM engine (v0.10.2) with config: model='ybelkada/llava-1.5-7b-hf-awq', speculative_config=None, tokenizer='ybelkada/llava-1.5-7b-hf-awq', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.float16, max_seq_len=4096, download_dir=None, load_format=auto, tensor_parallel_size=1, pipeline_parallel_size=1, data_parallel_size=1, disable_custom_all_reduce=False, quantization=awq, enforce_eager=False, kv_cache_dtype=auto, device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=0, served_model_name=ybelkada/llava-1.5-7b-hf-awq, enable_prefix_caching=True, chunked_prefill_enabled=True, use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output","vllm.mamba_mixer2","vllm.mamba_mixer","vllm.short_conv","vllm.linear_attention","vllm.plamo2_mamba_mixer","vllm.gdn_attention"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"cudagraph_mode":1,"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"pass_config":{},"max_capture_size":512,"local_cache_dir":null}
[1;36m(EngineCore_DP0 pid=968441)[0;0m WARNING 09-30 20:09:31 [interface.py:391] Using 'pin_memory=False' as WSL is detected. This may slow down the performance.
[W930 20:09:32.902886777 ProcessGroupNCCL.cpp:981] Warning: TORCH_NCCL_AVOID_RECORD_STREAMS is the default now, this environment variable is thus deprecated. (function operator())
[Gloo] Rank 0 is connected to 0 peer ranks. Expected number of connected peer ranks is : 0
[Gloo] Rank 0 is connected to 0 peer ranks. Expected number of connected peer ranks is : 0
[Gloo] Rank 0 is connected to 0 peer ranks. Expected number of connected peer ranks is : 0
[Gloo] Rank 0 is connected to 0 peer ranks. Expected number of connected peer ranks is : 0
[Gloo] Rank 0 is connected to 0 peer ranks. Expected number of connected peer ranks is : 0
[Gloo] Rank 0 is connected to 0 peer ranks. Expected number of connected peer ranks is : 0
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:32 [parallel_state.py:1165] rank 0 in world size 1 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0
[1;36m(EngineCore_DP0 pid=968441)[0;0m /home/stewa/code/imageworks/.venv/lib/python3.12/site-packages/mistral_common/protocol/instruct/messages.py:74: FutureWarning: ImageChunk has moved to 'mistral_common.protocol.instruct.chunk'. It will be removed from 'mistral_common.protocol.instruct.messages' in 1.10.0.
[1;36m(EngineCore_DP0 pid=968441)[0;0m   warnings.warn(msg, FutureWarning)
[1;36m(EngineCore_DP0 pid=968441)[0;0m WARNING 09-30 20:09:33 [topk_topp_sampler.py:69] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(EngineCore_DP0 pid=968441)[0;0m Fetching 1 files:   0%|          | 0/1 [00:00<?, ?it/s]Fetching 1 files: 100%|██████████| 1/1 [00:00<00:00, 20460.02it/s]
[1;36m(EngineCore_DP0 pid=968441)[0;0m Using a slow image processor as `use_fast` is unset and a slow processor was saved with this model. `use_fast=True` will be the default behavior in v4.52, even if the model was saved with a slow processor. This will result in minor differences in outputs. You'll still be able to use a slow processor with `use_fast=False`.
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:35 [gpu_model_runner.py:2338] Starting to load model ybelkada/llava-1.5-7b-hf-awq...
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:35 [gpu_model_runner.py:2370] Loading model from scratch...
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:35 [cuda.py:362] Using Flash Attention backend on V1 engine.
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:35 [weight_utils.py:348] Using model weights format ['*.safetensors']
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:36 [weight_utils.py:406] No model.safetensors.index.json found in remote.
[1;36m(EngineCore_DP0 pid=968441)[0;0m Loading safetensors checkpoint shards:   0% Completed | 0/1 [00:00<?, ?it/s]
[1;36m(EngineCore_DP0 pid=968441)[0;0m Loading safetensors checkpoint shards: 100% Completed | 1/1 [00:02<00:00,  2.95s/it]
[1;36m(EngineCore_DP0 pid=968441)[0;0m Loading safetensors checkpoint shards: 100% Completed | 1/1 [00:02<00:00,  2.95s/it]
[1;36m(EngineCore_DP0 pid=968441)[0;0m
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:39 [default_loader.py:268] Loading weights took 2.99 seconds
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:39 [gpu_model_runner.py:2392] Model loading took 4.2532 GiB and 3.811959 seconds
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:39 [gpu_model_runner.py:3000] Encoder cache will be initialized with a budget of 2048 tokens, and profiled with 3 image items of the maximum feature size.
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:43 [backends.py:539] Using cache directory: /home/stewa/.cache/vllm/torch_compile_cache/37c289977b/rank_0_0/backbone for vLLM's torch.compile
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:43 [backends.py:550] Dynamo bytecode transform time: 3.68 s
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:45 [backends.py:161] Directly load the compiled graph(s) for dynamic shape from the cache, took 1.501 s
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:45 [monitor.py:34] torch.compile takes 3.68 s in total
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:46 [gpu_worker.py:298] Available KV cache memory: 9.78 GiB
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:47 [kv_cache_utils.py:864] GPU KV cache size: 20,032 tokens
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:47 [kv_cache_utils.py:868] Maximum concurrency for 4,096 tokens per request: 4.89x
[1;36m(EngineCore_DP0 pid=968441)[0;0m Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   0%|          | 0/67 [00:00<?, ?it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   1%|▏         | 1/67 [00:00<00:12,  5.12it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   3%|▎         | 2/67 [00:00<00:11,  5.69it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   4%|▍         | 3/67 [00:00<00:10,  6.37it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   6%|▌         | 4/67 [00:00<00:09,  6.76it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   7%|▋         | 5/67 [00:00<00:10,  6.15it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   9%|▉         | 6/67 [00:00<00:09,  6.33it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  10%|█         | 7/67 [00:01<00:09,  6.24it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  12%|█▏        | 8/67 [00:01<00:09,  6.38it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  13%|█▎        | 9/67 [00:01<00:09,  6.39it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  15%|█▍        | 10/67 [00:01<00:08,  6.53it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  16%|█▋        | 11/67 [00:01<00:10,  5.56it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  18%|█▊        | 12/67 [00:01<00:09,  6.01it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  19%|█▉        | 13/67 [00:02<00:08,  6.44it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  21%|██        | 14/67 [00:02<00:07,  6.71it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  22%|██▏       | 15/67 [00:02<00:09,  5.67it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  24%|██▍       | 16/67 [00:02<00:09,  5.38it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  25%|██▌       | 17/67 [00:02<00:08,  5.60it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  27%|██▋       | 18/67 [00:02<00:08,  5.72it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  28%|██▊       | 19/67 [00:03<00:08,  5.38it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  30%|██▉       | 20/67 [00:03<00:08,  5.58it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  31%|███▏      | 21/67 [00:03<00:07,  5.94it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  33%|███▎      | 22/67 [00:03<00:07,  5.71it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  34%|███▍      | 23/67 [00:03<00:07,  5.77it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  36%|███▌      | 24/67 [00:04<00:07,  6.05it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  37%|███▋      | 25/67 [00:04<00:06,  6.39it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  39%|███▉      | 26/67 [00:04<00:06,  6.02it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  40%|████      | 27/67 [00:04<00:06,  6.09it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  42%|████▏     | 28/67 [00:04<00:06,  6.08it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  43%|████▎     | 29/67 [00:04<00:06,  5.79it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  45%|████▍     | 30/67 [00:05<00:06,  5.94it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  46%|████▋     | 31/67 [00:05<00:06,  5.68it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  48%|████▊     | 32/67 [00:05<00:05,  5.85it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  49%|████▉     | 33/67 [00:05<00:05,  5.86it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  51%|█████     | 34/67 [00:05<00:05,  6.11it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  52%|█████▏    | 35/67 [00:05<00:05,  6.38it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  54%|█████▎    | 36/67 [00:06<00:05,  5.66it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  55%|█████▌    | 37/67 [00:06<00:05,  5.99it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  57%|█████▋    | 38/67 [00:06<00:04,  6.64it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  58%|█████▊    | 39/67 [00:06<00:04,  6.84it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  60%|█████▉    | 40/67 [00:06<00:04,  6.58it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  63%|██████▎   | 42/67 [00:06<00:03,  7.83it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  64%|██████▍   | 43/67 [00:06<00:02,  8.14it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  66%|██████▌   | 44/67 [00:07<00:02,  8.52it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  67%|██████▋   | 45/67 [00:07<00:03,  6.20it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  69%|██████▊   | 46/67 [00:07<00:03,  5.80it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  70%|███████   | 47/67 [00:07<00:03,  5.89it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  72%|███████▏  | 48/67 [00:07<00:03,  6.24it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  73%|███████▎  | 49/67 [00:07<00:02,  6.50it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  75%|███████▍  | 50/67 [00:08<00:02,  6.59it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  76%|███████▌  | 51/67 [00:08<00:02,  6.96it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  78%|███████▊  | 52/67 [00:08<00:02,  7.28it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  79%|███████▉  | 53/67 [00:08<00:01,  7.48it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  81%|████████  | 54/67 [00:08<00:01,  7.27it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  82%|████████▏ | 55/67 [00:08<00:01,  7.29it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  84%|████████▎ | 56/67 [00:08<00:01,  7.39it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  85%|████████▌ | 57/67 [00:09<00:01,  7.07it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  87%|████████▋ | 58/67 [00:09<00:01,  7.18it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  88%|████████▊ | 59/67 [00:09<00:01,  7.38it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  90%|████████▉ | 60/67 [00:09<00:00,  7.27it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  91%|█████████ | 61/67 [00:09<00:00,  7.35it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  93%|█████████▎| 62/67 [00:09<00:00,  7.48it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  94%|█████████▍| 63/67 [00:09<00:00,  7.64it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  96%|█████████▌| 64/67 [00:09<00:00,  7.83it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  97%|█████████▋| 65/67 [00:10<00:00,  7.51it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  99%|█████████▊| 66/67 [00:10<00:00,  7.19it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE): 100%|██████████| 67/67 [00:10<00:00,  6.93it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE): 100%|██████████| 67/67 [00:10<00:00,  6.45it/s]
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:57 [gpu_model_runner.py:3118] Graph capturing finished in 11 secs, took 0.48 GiB
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:57 [gpu_worker.py:391] Free memory on device (14.66/15.99 GiB) on startup. Desired GPU memory utilization is (0.9, 14.39 GiB). Actual usage is 4.25 GiB for weight, 0.34 GiB for peak activation, 0.02 GiB for non-torch memory, and 0.48 GiB for CUDAGraph memory. Replace gpu_memory_utilization config with `--kv-cache-memory=9831288627` to fit into requested memory, or `--kv-cache-memory=10118650880` to fully utilize gpu memory. Current kv cache memory in use is 10504474419 bytes.
[1;36m(EngineCore_DP0 pid=968441)[0;0m INFO 09-30 20:09:58 [core.py:218] init engine (profile, create kv cache, warmup model) took 18.50 seconds
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:09:58 [loggers.py:142] Engine 000: vllm cache_config_info with initialization after num_gpu_blocks is: 1252
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:09:58 [async_llm.py:180] Torch profiler disabled. AsyncLLM CPU traces will not be collected.
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:09:58 [api_server.py:1692] Supported_tasks: ['generate']
[1;36m(APIServer pid=968226)[0;0m Fetching 1 files:   0%|          | 0/1 [00:00<?, ?it/s]Fetching 1 files: 100%|██████████| 1/1 [00:00<00:00, 36792.14it/s]
[1;36m(APIServer pid=968226)[0;0m Fetching 1 files:   0%|          | 0/1 [00:00<?, ?it/s]Fetching 1 files: 100%|██████████| 1/1 [00:00<00:00, 3647.22it/s]
[1;36m(APIServer pid=968226)[0;0m Using a slow image processor as `use_fast` is unset and a slow processor was saved with this model. `use_fast=True` will be the default behavior in v4.52, even if the model was saved with a slow processor. This will result in minor differences in outputs. You'll still be able to use a slow processor with `use_fast=False`.
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712] Using supplied chat template: {# llava15_vicuna.jinja #}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712] {% set image_token = "<image>" %}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712] {% for m in messages %}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712] {% if m['role'] == 'system' %}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712] SYSTEM: {{ m['content'] | trim }}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712] {% elif m['role'] == 'user' %}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712] USER:
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712] {%- if m['content'] is string -%}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712]   {{ m['content'] | trim }}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712] {%- else -%}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712]   {# handle OpenAI Vision content blocks #}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712]   {%- for part in m['content'] -%}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712]     {%- if part['type'] == 'text' -%}{{ part['text'] | trim }}{% endif -%}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712]     {%- if part['type'] == 'image_url' -%} {{ image_token }} {% endif -%}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712]   {%- endfor -%}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712] {%- endif -%}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712] {% elif m['role'] == 'assistant' %}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712] ASSISTANT: {{ m['content'] | trim }}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712] {% endif %}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712] {% endfor %}
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712] ASSISTANT:
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:10:00 [api_server.py:1712] It is different from official chat template 'ybelkada/llava-1.5-7b-hf-awq'. This discrepancy may lead to performance degradation.
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [api_server.py:1971] Starting vLLM API server 0 on http://0.0.0.0:24001
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:36] Available routes are:
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /openapi.json, Methods: HEAD, GET
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /docs, Methods: HEAD, GET
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /docs/oauth2-redirect, Methods: HEAD, GET
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /redoc, Methods: HEAD, GET
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /health, Methods: GET
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /load, Methods: GET
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /ping, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /ping, Methods: GET
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /tokenize, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /detokenize, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /v1/models, Methods: GET
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /version, Methods: GET
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /v1/responses, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /v1/responses/{response_id}, Methods: GET
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /v1/responses/{response_id}/cancel, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /v1/chat/completions, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /v1/completions, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /v1/embeddings, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /pooling, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /classify, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /score, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /v1/score, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /v1/audio/transcriptions, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /v1/audio/translations, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /rerank, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /v1/rerank, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /v2/rerank, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /scale_elastic_ep, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /is_scaling_elastic_ep, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /invocations, Methods: POST
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:01 [launcher.py:44] Route: /metrics, Methods: GET
[1;36m(APIServer pid=968226)[0;0m INFO:     Started server process [968226]
[1;36m(APIServer pid=968226)[0;0m INFO:     Waiting for application startup.
[1;36m(APIServer pid=968226)[0;0m INFO:     Application startup complete.
[1;36m(APIServer pid=968226)[0;0m INFO:     192.168.88.229:44862 - "HEAD /health HTTP/1.1" 405 Method Not Allowed
[1;36m(APIServer pid=968226)[0;0m INFO:     192.168.88.229:48202 - "GET /health HTTP/1.1" 200 OK
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:10:56 [chat_utils.py:538] Detected the chat template content format to be 'openai'. You can set `--chat-template-content-format` to override this.
[1;36m(APIServer pid=968226)[0;0m Fetching 1 files:   0%|          | 0/1 [00:00<?, ?it/s]Fetching 1 files: 100%|██████████| 1/1 [00:00<00:00, 16644.06it/s]
[1;36m(APIServer pid=968226)[0;0m INFO:     192.168.88.229:44886 - "POST /v1/chat/completions HTTP/1.1" 500 Internal Server Error
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:11:09 [launcher.py:98] port 24001 is used by process psutil.Process(pid=968226, name='vllm', status='running') launched with command:
[1;36m(APIServer pid=968226)[0;0m WARNING 09-30 20:11:09 [launcher.py:98] /home/stewa/code/imageworks/.venv/bin/python /home/stewa/code/imageworks/.venv/bin/vllm serve ybelkada/llava-1.5-7b-hf-awq --host 0.0.0.0 --port 24001 --quantization awq --dtype float16 --chat-template llava15_vicuna.jinja --max-model-len 4096
[1;36m(APIServer pid=968226)[0;0m INFO 09-30 20:11:09 [launcher.py:101] Shutting down FastAPI HTTP server.
[rank0]:[W930 20:11:09.933044037 ProcessGroupNCCL.cpp:1538] Warning: WARNING: destroy_process_group() was not called before program exit, which can leak resources. For more info, please see https://pytorch.org/docs/stable/distributed.html#shutdown (function operator())
[1;36m(APIServer pid=968226)[0;0m INFO:     Shutting down
[1;36m(APIServer pid=968226)[0;0m INFO:     Waiting for application shutdown.
[1;36m(APIServer pid=968226)[0;0m INFO:     Application shutdown complete.
